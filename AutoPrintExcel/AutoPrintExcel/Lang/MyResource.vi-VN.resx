<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>Thông tin</value>
  </data>
  <data name="ClearGridview" xml:space="preserve">
    <value>Xóa danh sách in</value>
  </data>
  <data name="ClearTreeView" xml:space="preserve">
    <value>Xóa dữ liệu nguồn</value>
  </data>
  <data name="EditandPrint" xml:space="preserve">
    <value>Sửa và in</value>
  </data>
  <data name="EditNameofCheckSheet" xml:space="preserve">
    <value>Đổi tên PO</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>Tiếng Anh</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Thoát</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>Tệp</value>
  </data>
  <data name="FixNameKensa" xml:space="preserve">
    <value>Đổi tên tệp kỷ lục</value>
  </data>
  <data name="Function" xml:space="preserve">
    <value>Chức năng</value>
  </data>
  <data name="GetPathCheckSheet" xml:space="preserve">
    <value>Lấy đường dẫn CheckSheet</value>
  </data>
  <data name="GetPathKensa" xml:space="preserve">
    <value>Lấy đường dẫn Kỷ lục</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Trợ giúp</value>
  </data>
  <data name="ImportDataSource" xml:space="preserve">
    <value>Chọn dữ liệu nguồn</value>
  </data>
  <data name="ImportListExecute" xml:space="preserve">
    <value>Chọn danh sách in</value>
  </data>
  <data name="JustGetName" xml:space="preserve">
    <value>Chỉ lấy tên</value>
  </data>
  <data name="JustPrint" xml:space="preserve">
    <value>Chỉ in Check Sheet</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Ngôn ngữ</value>
  </data>
  <data name="ListDataSource" xml:space="preserve">
    <value>Dữ liệu nguồn</value>
  </data>
  <data name="ListNotFound" xml:space="preserve">
    <value>Danh sách in lỗi</value>
  </data>
  <data name="ListPrint" xml:space="preserve">
    <value>Danh sách in</value>
  </data>
  <data name="PrintKensa" xml:space="preserve">
    <value>Chỉ in Kỷ lục</value>
  </data>
  <data name="VietNamese" xml:space="preserve">
    <value>Tiếng Việt</value>
  </data>
  <data name="Cell" xml:space="preserve">
    <value>Sửa ô thứ</value>
  </data>
  <data name="Text" xml:space="preserve">
    <value>Nhập chữ</value>
  </data>
  <data name="ClearListHino" xml:space="preserve">
    <value>Xóa danh sách Hino</value>
  </data>
  <data name="CustomPrinter" xml:space="preserve">
    <value>Cài đặt máy in</value>
  </data>
  <data name="DefaultSettings" xml:space="preserve">
    <value>Cài đặt mặc định</value>
  </data>
  <data name="ExecutePDFFile" xml:space="preserve">
    <value>Xử lý file PDF</value>
  </data>
  <data name="FixNameCheckSheet" xml:space="preserve">
    <value>Sửa tên CheckSheet</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>Từ</value>
  </data>
  <data name="GetPath" xml:space="preserve">
    <value>Lấy đường dẫn</value>
  </data>
  <data name="GetPathDrawing" xml:space="preserve">
    <value>Lấy đường dẫn bản vẽ (PDF)</value>
  </data>
  <data name="ImportListDataSource" xml:space="preserve">
    <value>Chọn dữ liệu nguồn</value>
  </data>
  <data name="ImportListDefineHino" xml:space="preserve">
    <value>Nhập danh sách khai báo hàng Hino</value>
  </data>
  <data name="ImportPDFSource" xml:space="preserve">
    <value>Chọn dữ liệu nguồn PDF</value>
  </data>
  <data name="ListSourceHino" xml:space="preserve">
    <value>Danh sách khai báo Hino</value>
  </data>
  <data name="PrintCustom" xml:space="preserve">
    <value>In tùy biến</value>
  </data>
  <data name="PrintDrawing" xml:space="preserve">
    <value>In bản vẽ (PDF)</value>
  </data>
  <data name="PrintDuplex" xml:space="preserve">
    <value>Kiểu in</value>
  </data>
  <data name="PrinterName" xml:space="preserve">
    <value>Tên máy in</value>
  </data>
  <data name="PrintPages" xml:space="preserve">
    <value>Trang in</value>
  </data>
  <data name="PrintSetting" xml:space="preserve">
    <value>CÀI ĐẶT MÁY IN</value>
  </data>
  <data name="Quit" xml:space="preserve">
    <value>Thoát</value>
  </data>
  <data name="SaveSettings" xml:space="preserve">
    <value>Lưu cài đặt</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>Đến</value>
  </data>
  <data name="Tray" xml:space="preserve">
    <value>Khay in</value>
  </data>
  <data name="FixDefineBC" xml:space="preserve">
    <value>Sửa file định nghĩa BeckMan</value>
  </data>
</root>